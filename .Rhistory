hist(data2[,i], main=names(data2)[i],xlab =names(data2)[i],col = "powder blue" )
}
data2$galaxy
sum(is.na(train$y))
sum(is.na(test$y))
colSums(is.na(data2))
data2=select(data2,-y)
library(caret)
head(data2)
data2 = select(data2,-galactic.year)
library(caret)
head(data2)
#data2 = select(data2,-galactic.year)
dim(data2)
for (i in which(sapply(data2, is.numeric))) {
data2[is.na(data2[, i]), i] <- mean(data2[, i],  na.rm = TRUE)
}
head(data2)
library(caret)
head(data2)
data2 = select(data2,-galactic.year)
data2 = select(data2,-1)
#split
glimpse(data2)
#split
glimpse(data2)
data2 = cbind(data2,data3$y)
#split
glimpse(data2)
y = data3$y
data2 = cbind(data2,y)
#split
glimpse(data2)
y = data3$y
#data2 = cbind(data2,y)
data2 = select(data2,-10)
glimpse(data2)
train2 = data2[1:3865,]
test2 = data2[3866:4755,]
dim(train2)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="rf", metric="RMSE", trControl=trainControl)
# display results
print(fit)
test2$pred<-predict(fit,test2)
head(test2$pred)
x = test2$pred
x = as.data.frame(x)
x = test2$pred
x = as.data.frame(x)
write.csv("p.csv")
p<-read.csv("p.csv")
x = test2$pred
x = as.data.frame(x)
write.csv("p.csv")
x = test2$pred
y = test2$existence.expectancy.index
x = as.data.frame(x,y)
write.csv(x,"p.csv")
p<-read.csv("p.csv")
p
pred = test2$pred
y = test2$existence.expectancy.index
x = as.data.frame(pred,y)
write.csv(x,"p.csv")
p<-read.csv("p.csv")
p
pred = round(test2$pred,2)
y = test2$existence.expectancy.index
x = as.data.frame(pred,y)
write.csv(x,"p.csv")
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
#index = c(seq(0:890))
head(index)
pred = test2$pred
y = test2$existence.expectancy.index
x = as.data.frame(pred,y)
write.csv(x,"p.csv")
p<-read.csv("p.csv")
p
pred = test2$pred
y = test2$existence.expectancy.index
p = as.data.frame(pred,y)
write.csv(p,"p.csv")
p<-read.csv("p.csv")
p
pred = test2$pred
y = test2$existence.expectancy.index
x = list(pred,y)
p = as.data.frame(x)
pred = test2$pred
y = test2$existence.expectancy.index
x = list(pred,y)
p = as.data.frame(x)
write.csv(p,"x.csv")
o<-read.csv("x.csv")
o
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
test2$pred
#test$pred_opt<-NA
l = test2$pred
l = as.data.frame(l)
#test$pred_opt<-NA
l = test2$pred
l = as.data.frame(l)
write.csv(l,"l.csv")
library(readxl)
sample_submit<- read_csv("sample_submit.csv")
View(sample_submit_csv)
sample_submit<-read.csv("f.csv",header = T)
sample_submit<-read.csv("f.csv",header = T)
head(sample_submit)
write.csv(sample_submit,"sample_submit")
write.csv(sample_submit,"sample_submit")
sample_submit<-read.csv("f.csv",header = T)
write.csv(sample_submit,"sample_submit")
read.csv("sample_submit.csv")
read.csv("sample_submit.csv")
write.csv(sample_submit,"sample_submit.csv")
read.csv("sample_submit.csv")
read.csv("sample_submit.csv")
?write.csv
write.csv(sample_submit,"sample_submit.csv",col.names = NA)
sample_submit<-read.csv("f.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = NA)
read.csv("sample_submit.csv",header = T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#load the data
train<-read.csv("train.csv",stringsAsFactors = F)
test<-read.csv("test.csv",stringsAsFactors = F)
head(train)
dim(train)
dim(test)
head(test)
train%>%
group_by(galaxy)%>%
count(galaxy)
test%>%
group_by(galaxy)%>%
count(galaxy)
data3<-bind_rows(train,test)
tail(data3)
glimpse(data2)
summary(data2)
for(i in 4:79) {
hist(data2[,i], main=names(data2)[i],xlab =names(data2)[i],col = "powder blue" )
}
anyDuplicated(data2)
anyDuplicated(data2)
data2$galaxy
sum(is.na(train$y))
sum(is.na(test$y))
colSums(is.na(data2))
colSums(is.na(data2))
data2=select(data2,-y)
library(caret)
head(data2)
data2 = select(data2,-galactic.year)
library(caret)
head(data2)
#data2 = select(data2,-galactic.year)
dim(data2)
for (i in which(sapply(data2, is.numeric))) {
data2[is.na(data2[, i]), i] <- mean(data2[, i],  na.rm = TRUE)
}
head(data2)
y =data3$y
data2 =cbind(data2,y)
data2
#data2 = select(data2,-11)
glimpse(data2)
train2 = data2[1:3865,]
test2 = data2[3866:4755,]
dim(train2)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="rf", metric="RMSE", trControl=trainControl)
# display results
print(fit)
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
test2$pred
sample_submit<-read.csv("f.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
sample_submit<-read.csv("f.csv",header = T)
sample_submit<-read.csv("iy.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
sample_submit<-read.csv("iy.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
read.csv("sample_submit.csv",header = T)
read.csv("sample_submit.csv",header = T)
sample_submit<-read.csv("iy.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
sample_submit<-read.csv("iy.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
read.csv("sample_submit.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
read.csv("sample_submit.csv",header = T)
fix<-read.csv("sample_submit.csv",header = T)
head(fix)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="lm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=test2, method="gbm", metric="RMSE", trControl=trainControl)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="gbm", metric="RMSE", trControl=trainControl)
dim(test2)
glimpse(test2)
test2<-select(test2,-y)
glimpse(test2)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
library(tidyverse)
#load the data
train<-read.csv("train.csv",stringsAsFactors = F)
test<-read.csv("test.csv",stringsAsFactors = F)
head(train)
dim(train)
dim(test)
data3<-bind_rows(train,test)
tail(data3)
glimpse(data2)
summary(data2)
library(caret)
head(data2)
#data2 = select(data2,-galactic.year)
dim(data2)
for (i in which(sapply(data2, is.numeric))) {
data2[is.na(data2[, i]), i] <- mean(data2[, i],  na.rm = TRUE)
}
library(tidyverse)
#load the data
train<-read.csv("train.csv",stringsAsFactors = F)
test<-read.csv("test.csv",stringsAsFactors = F)
head(train)
dim(train)
dim(test)
summary(data2)
train2 = data2[1:3865,]
test2 = data2[3866:4755,]
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="gbm", metric="RMSE", trControl=trainControl)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
test2<-select(test2,-y)
glimpse(test2)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
existence.expectancy.index =data3$existence.expectancy.index
#sample_submit<-read.csv("iy.csv",header = T)
sample_submit<-cbind(sample_submit,existence.expectancy.index )
existence.expectancy.index =test$existence.expectancy.index
#sample_submit<-read.csv("iy.csv",header = T)
sample_submit<-cbind(sample_submit,existence.expectancy.index )
fix<-read.csv("sample_submit.csv",header = T)
head(fix)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
existence.expectancy.index =test$existence.expectancy.index
#sample_submit<-read.csv("iy.csv",header = T)
sample_submit<-cbind(sample_submit,existence.expectancy.index )
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
fix<-read.csv("sample_submit.csv",header = T)
head(fix)
test%>%
filter(existence.expectancy.index<0.7)%>%
select(existence.expectancy.index,y)%>%
head()
test%>%
filter(existence.expectancy.index<0.7)%>%
select(existence.expectancy.index,y)%>%
head()
library(tidyverse)
test%>%
filter(existence.expectancy.index<0.7)%>%
select(existence.expectancy.index,y)%>%
head()
test%>%
filter(existence.expectancy.index<0.7)%>%
select(existence.expectancy.index)%>%
head()
test%>%
filter(existence.expectancy.index<0.7)%>%
select(existence.expectancy.index)%>%
count()
#load the data
train<-read.csv("train.csv",stringsAsFactors = F)
test<-read.csv("test.csv",stringsAsFactors = F)
head(train)
train=train[,which(colMeans(!is.na(train))>0.7)]
head(train)
dim(train)
for (i in which(sapply(train, is.numeric))) {
train[is.na(train[, i]), i] <- mean(train[, i],  na.rm = TRUE)
}
t<-select(t,-1)
library(tidyverse)
library(caret)
t<-select(t,-1)
head(t)
set.seed(107)
inTrain <- createDataPartition(
y = t$y,
## the outcome data are needed
p = .75,
## The percentage of data in the
## training set
list = FALSE
)
## The output is a set of integers for the rows of Sonar
## that belong in the training set.
str(inTrain)
training <- t[ inTrain,]
testing  <- t[-inTrain,]
train$existence.expectancy.index
glimpse(t)
library(caret)
library(tidyverse)
test%>%
filter(existence.expectancy.index<0.7)%>%
select(existence.expectancy.index)%>%
count()
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=testing, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=training, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
#summary(fit,cBars=10,method = relative.influence,las =2)
training$prt<-predict(fit,testing)
#summary(fit,cBars=10,method = relative.influence,las =2)
testing$prt<-predict(fit,testing)
head(prt)
testing%>%
ggplot(aes(x = prt,y = y))+
geom_point(size=0.5,pch = 21)+
theme_classic()+geom_smooth(method = "gbm",se=F)
testing%>%
ggplot(aes(x = prt,y = y))+
geom_point(size=0.5,pch = 21)+
theme_classic()+geom_smooth(method = "lm",se=F)
testing%>%
ggplot(aes(x = prt,y = y))+
geom_point(size=0.5,pch = 21)+
theme_classic()+geom_smooth(method = "loess",se=F)
testing%>%
ggplot(aes(x = prt,y = y))+
geom_point(size=0.5,pch = 21)+
theme_classic()+geom_smooth(method = "ridge",se=F)
testing%>%
ggplot(aes(x = prt,y = y))+
geom_point(size=0.5,pch = 21)+
theme_classic()+geom_smooth(method = "rf",se=F)
testing%>%
ggplot(aes(x = prt,y = y))+
geom_point(size=0.5,pch = 21)+
theme_classic()+geom_smooth(method = "lm",se=F)
existence.expectancy.index =test$existence.expectancy.index
sample_submit<-read.csv("iy.csv",header = T)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
fix<-read.csv("sample_submit.csv",header = T)
head(fix)
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
test2$pred
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="gbm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="lm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="lm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="adaboost", metric="RMSE", trControl=trainControl)
??caret
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="brnn", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="xgbTree", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="ranger", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(pred~., data=test2, method="ranger", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=testing, method="ranger", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=training, method="ranger", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="ridge", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="enet", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="glm", metric="RMSE", trControl=trainControl)
# display results
print(fit)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="ranger", metric="RMSE", trControl=trainControl)
# display results
print(fit)
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
test2$pred
head(sample_submit)
head(sample_submit)
sample_submit$pred<-test2$pred
existence.expectancy.index =test$existence.expectancy.index
sample_submit<-read.csv("iy.csv",header = T)
existence.expectancy.index =test$existence.expectancy.index
write.csv(sample_submit,"iy.csv",header = T)
existence.expectancy.index =test$existence.expectancy.index
write.csv(sample_submit,"iy.csv",)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
fix<-read.csv("sample_submit.csv",header = T)
head(fix)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
fix<-read.csv("sample_submit.csv",header = T)
head(fix)
fix<-read.csv("sample_submit.csv",header = T)
tail(fix)
trainControl <- trainControl(method="cv", number=5)
set.seed(7)
fit <- train(y~., data=train2, method="ranger", metric="RMSE", trControl=trainControl)
# display results
print(fit)
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
plot(varImp(fit))
plot(varImp(fit))
#plot(varImp(fit))
test2$pred<-round(predict(fit,test2),2)
head(test2$pred)
head(sample_submit)
sample_submit$pred<-test2$pred
existence.expectancy.index =test$existence.expectancy.index
write.csv(sample_submit,"iy.csv",)
write.csv(sample_submit,"sample_submit.csv",col.names = F,row.names = F)
fix<-read.csv("sample_submit.csv",header = T)
tail(fix)
